{"version":3,"sources":["User.js","AddUser.js","UserList.js","App.js","serviceWorker.js","index.js"],"names":["User","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","editedUser","_this2","react_default","a","createElement","Row","className","Col","xs","user","name","Button","color","onClick","removeUser","id","editUser","Component","AddUser","handleUpdate","bind","assertThisInitialized","addUser","event","setState","target","value","Input","type","onChange","nextId","EditModal","editedName","editingItem","Modal","isOpen","toggle","onCloseModal","ModalHeader","ModalBody","ModalFooter","setChangedUser","React","UserList","_this3","users","newName","concat","toConsumableArray","removeId","filteredUsers","_","reject","x","u","list","findIndex","_this4","chain","sortBy","map","src_User_0","key","Container","renderUsers","src_AddUser","UserList_EditModal","App","src_UserList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.72624ee4.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Row, Col, Button} from 'reactstrap';\r\n\r\nimport './User.css';\r\n\r\nclass User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editedUser: \"\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row className=\"User\">\r\n        <Col xs=\"10\">\r\n          Hello {this.props.user.name}!\r\n        </Col>\r\n        <Col xs=\"2\">\r\n          <Button color=\"danger\" onClick={() => this.props.removeUser(this.props.user.id)}>Remove</Button>\r\n          <Button color=\"primary\" onClick={() => this.props.editUser(this.props.user)}>Edit</Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;","import React, {Component} from 'react';\r\nimport {Row, Col, Input, Button} from 'reactstrap'; \r\n\r\nclass AddUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\"\r\n    };\r\n\r\n    this.handleUpdate = this.handleUpdate.bind(this);\r\n    this.addUser = this.addUser.bind(this);\r\n  }\r\n\r\n  handleUpdate(event) {\r\n    this.setState({name: event.target.value});\r\n  }\r\n\r\n  addUser() {\r\n    this.props.addUser(this.state.name);\r\n    this.setState({name: \"\"});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col xs=\"10\">\r\n          <Input type=\"text\" value={this.state.name} onChange={this.handleUpdate} />\r\n          </Col>\r\n          <Col xs=\"2\">\r\n          <Button color=\"success\" onClick={this.addUser}>Add</Button>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddUser;","import React, {Component} from 'react';\r\nimport _ from 'lodash';\r\nimport {Container, Button, Input, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap'; \r\n\r\nimport User from './User';\r\nimport AddUser from './AddUser';\r\n\r\nlet nextId = 4;\r\n\r\nconst getNextId = () => {\r\n  nextId++;\r\n  return nextId;\r\n};\r\n\r\nclass EditModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editedName: this.props.editingItem.name\r\n    }\r\n\r\n    this.handleUpdate = this.handleUpdate.bind(this);\r\n  }\r\n\r\n  handleUpdate(event) {\r\n    this.setState({editedName: event.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal isOpen={true} toggle={this.props.onCloseModal}>\r\n          <ModalHeader toggle={this.props.onCloseModal}>Edit User</ModalHeader>\r\n          <ModalBody>\r\n            <Input value={this.state.editedName} onChange={this.handleUpdate}></Input>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={() => this.props.setChangedUser(this.props.editingItem.id, this.state.editedName)}>Save</Button>{' '}\r\n            <Button color=\"secondary\" onClick={this.props.onCloseModal}>Cancel</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass UserList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [{id: 1, name: 'Vanya'}, {id: 2, name: 'Klaus'}, {id: 3, name: 'Diego'}],\r\n      editingItem: null\r\n    };\r\n\r\n    this.addUser = this.addUser.bind(this);\r\n    this.removeUser = this.removeUser.bind(this);\r\n    this.editUser = this.editUser.bind(this);\r\n    this.onCloseModal = this.onCloseModal.bind(this);\r\n    this.setChangedUser = this.setChangedUser.bind(this);\r\n  }\r\n\r\n  addUser(newName) {\r\n    this.setState({users: [...this.state.users, {id: getNextId(), name: newName}]});\r\n  }\r\n\r\n  removeUser(removeId) {\r\n    const filteredUsers = _.reject(this.state.users, x => x.id === removeId);\r\n    this.setState({users: filteredUsers});\r\n  }\r\n\r\n  editUser(u) {\r\n    this.setState({editingItem: u});\r\n  }\r\n\r\n  setChangedUser(id, newName) {\r\n    let list = this.state.users;\r\n    const index = _.findIndex(list, x => x.id === id);\r\n    list[index] = {name: newName};\r\n    this.setState({users: list});\r\n    this.setState({editingItem: null});\r\n  }\r\n\r\n  renderUsers() {\r\n    return _.chain(this.state.users)\r\n      .sortBy(x => x.name)\r\n      .map(u => (\r\n        <User key={u.id} user={u} removeUser={this.removeUser} editUser={this.editUser}/>\r\n      ))\r\n      .value();\r\n  }\r\n\r\n  onCloseModal() {\r\n    this.setState({editingItem: null});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {this.renderUsers()}\r\n        <AddUser addUser={this.addUser} />\r\n        {this.state.editingItem ? <EditModal editingItem={this.state.editingItem} editUser={this.editUser} setChangedUser={this.setChangedUser} onCloseModal={this.onCloseModal}/> : null}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserList;","import React from 'react';\nimport UserList from './UserList';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <UserList />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'popper.js/dist/umd/popper.min.js';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}